#!/usr/bin/env python

"""Utility methods for working with protected paths."""

from pathlib import PurePath
from typing import Union

PROTECTED_PATHS = [
    "/boot.py",
    "/bt-lk1.dat",
    "/bt-lk2.dat",
    "/commands/__init__.mpy",
    "/commands/abstract_handler.mpy",
    "/commands/hub_methods.mpy",
    "/commands/light_methods.mpy",
    "/commands/linegraphmonitor_methods.mpy",
    "/commands/motor_methods.mpy",
    "/commands/move_methods.mpy",
    "/commands/program_methods.mpy",
    "/commands/sound_methods.mpy",
    "/commands/wait_methods.mpy",
    "/event_loop/__init__.mpy",
    "/event_loop/event_loop.mpy",
    "/hub_runtime.mpy",
    "/local_name.txt",
    "/main.py",
    "mindstorms/__init__.mpy",
    "mindstorms/control.mpy",
    "mindstorms/operator.mpy",
    "mindstorms/util.mpy",
    "/programrunner/__init__.mpy",
    "/projects/.slots",
    "/projects/standalone.mpy",
    "/projects/standalone_/__init__.mpy",
    "/projects/standalone_/animation.mpy",
    "/projects/standalone_/device_helper.mpy",
    "/projects/standalone_/devices.mpy",
    "/projects/standalone_/display.mpy",
    "/projects/standalone_/priority_mapping.mpy",
    "/projects/standalone_/program.mpy",
    "/projects/standalone_/row.mpy",
    "/projects/standalone_/util.mpy",
    "/protocol/__init__.mpy",
    "/protocol/notifications.mpy",
    "/protocol/rpc_protocol.mpy",
    "/protocol/ujsonrpc.mpy",
    "/runtime/__init__.mpy",
    "/runtime/dirty_dict.mpy",
    "/runtime/extensions/__init__.mpy",
    "/runtime/extensions/abstract_extension.mpy",
    "/runtime/extensions/displaymonitor.mpy",
    "/runtime/extensions/linegraphmonitor.mpy",
    "/runtime/extensions/music.mpy",
    "/runtime/extensions/radio_broadcast.mpy",
    "/runtime/extensions/sound.mpy",
    "/runtime/extensions/weather.mpy",
    "/runtime/multimotor.mpy",
    "/runtime/stack.mpy",
    "/runtime/timer.mpy",
    "/runtime/virtualmachine.mpy",
    "/runtime/vm_store.mpy",
    "/sounds/menu_click",
    "/sounds/menu_fastback",
    "/sounds/menu_program_start",
    "/sounds/menu_program_stop",
    "/sounds/menu_shutdown",
    "/sounds/startup",
    "/spike/__init__.mpy",
    # "/spike/app.mpy",
    # "/spike/button.mpy",
    # "/spike/colorsensor.mpy",
    "/spike/control.mpy",
    # "/spike/distancesensor.mpy",
    # "/spike/forcesensor.mpy",
    # "/spike/lightmatrix.mpy",
    # "/spike/motionsensor.mpy",
    # "/spike/motor.mpy",
    # "/spike/motorpair.mpy",
    "/spike/operator.mpy",
    # "/spike/primehub.mpy",
    # "/spike/speaker.mpy",
    # "/spike/statuslight.mpy",
    "/spike/util.mpy",
    "/system/__init__.mpy",
    "/system/abstractwrapper.mpy",
    "/system/callbacks/__init__.mpy",
    "/system/callbacks/customcallbacks.mpy",
    "/system/display.mpy",
    "/system/motors.mpy",
    "/system/motorwrapper.mpy",
    "/system/move.mpy",
    "/system/movewrapper.mpy",
    "/system/simplemotorwrapper.mpy",
    "/system/simplemovewrapper.mpy",
    "/system/sound.mpy",
    "/ui/__init__.mpy",
    "/ui/hubui.mpy",
    "/util/__init__.mpy",
    "/util/adjust_motor_offset.mpy",
    "/util/animations.mpy",
    "/util/auto_connect.mpy",
    "/util/color.mpy",
    "/util/constants.mpy",
    "/util/error_handler.mpy",
    "/util/ext_sensor_data.mpy",
    "/util/log.mpy",
    "/util/motion.mpy",
    "/util/motor.mpy",
    "/util/movement.mpy",
    # "/util/parser.mpy",
    "/util/print_override.mpy",
    "/util/resetter.mpy",
    # "/util/rotation.mpy",
    "/util/schedule.mpy",
    "/util/scratch.mpy",
    "/util/sensors.mpy",
    "/util/storage.mpy",
    "/util/time.mpy",
    "/version.py",
]


def is_path_protected(*, path: Union[str, PurePath]) -> bool:
    """
    Checks if a path is protected.
    Args:
        path: The path to be checked.

    Returns: True if the path is protected, false otherwise.

    """
    return str(path) in PROTECTED_PATHS
